#--- SATOSA Config ---#
BASE: https://example.com
INTERNAL_ATTRIBUTES: "internal_attributes.yaml"
COOKIE_STATE_NAME: "SATOSA_STATE"
STATE_ENCRYPTION_KEY: "asdASD123"
CUSTOM_PLUGIN_MODULE_PATHS:
  - "plugins/backends"
  - "plugins/frontends"
  - "plugins/micro_services"
BACKEND_MODULES:
  - "plugins/backends/saml2_backend.yaml"
FRONTEND_MODULES:
  - "plugins/frontends/saml2_frontend.yaml"
MICRO_SERVICES:
  - "plugins/microservices/static_attributes.yaml"
LOGGING:
  version: 1
  formatters:
    simple:
      format: "[%(asctime)-19.19s] [%(levelname)-5.5s]: %(message)s"
  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: simple
      stream: ext://sys.stdout
    info_file_handler:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: simple
      filename: info.log
      maxBytes: 10485760 # 10MB
      backupCount: 20
      encoding: utf8
  loggers:
    satosa:
      level: DEBUG
      handlers: [console]
      propagate: no
  root:
    level: INFO
    handlers: [info_file_handler]

# see succinct_log_filter.py
SUCCINCT_LOG_SATOSA = {
    'satosa.state:satosa_logging': False,
    'satosa.proxy_server:unpack_request': 100,
    'satosa.proxy_server:unpack_post:unpack_post': 100,
    'satosa.state:satosa_logging:': 100,
    'satosa.frontends.saml2:satosa_logging': 100,
    'satosa.backends.saml2:satosa_logging': 100,
}
#SUCCINCT_LOG_PYSAML2 = {
#    'saml2.request:_loads': 100,
#    'saml2.response:_loads': 100,
#    'saml2.response:_loads': 100,
#    'saml2.entity:_parse_response ': 100,
#    'saml2.response:get_identity': 100,
#    'saml2.response:read_attribute_statement ': 100,
#}
